import asyncio  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
import requests  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
from aiogram import Bot, Dispatcher, types, F  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã –∏–∑ aiogram –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
from aiogram.filters.command import Command  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥


# –ó–∞–¥–∞–µ–º —Ç–æ–∫–µ–Ω—ã –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –∏ –¥–ª—è API –ø–æ–≥–æ–¥—ã
TG_TOKEN = '6835958323:AAGzZgYsW1fP-XIY6RKwbDjitmNTu9XheBc'
WEATHER_TOKEN = 'ee7df615ccbb79fceec65c96e6392d88'

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(TG_TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç —Å–º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å
weather_list = ('Clouds', 'Clear', 'Atmosphere', 'Snow', 'Rain', 'Drizzle', 'Thunderstorm')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command('start'))
async def start_command(message: types.Message):
    # –û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    await message.answer('–ü—Ä–∏–≤–µ—Ç! –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ, –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message(F.text)
async def get_weather(message: types.Message):
    city = message.text  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API –ø–æ–≥–æ–¥—ã
        url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&units=metric&lang=ru&appid={WEATHER_TOKEN}'
        weather_data = requests.get(url).json()  # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
        temperature = weather_data['main']['temp']
        temperature_feels = weather_data['main']['feels_like']
        wind_speed = weather_data['wind']['speed']
        cloud_cover = weather_data['weather'][0]['description']
        humidity = weather_data['main']['humidity']

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≥–æ–¥–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if weather_data['weather'][0]['main'] == 'Clouds':
            await message.answer(f'–ì–æ—Ä–æ–¥: {city} \n'
                                 f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}‚ÑÉ üå°\n'
                                 f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}‚ÑÉ üå°\n'
                                 f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å üí®\n'
                                 f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} üå§\n'
                                 f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n'
                                 f"\n"
                                 f'–í–µ—Ä–æ—è—Ç–Ω—ã –æ—Å–∞–¥–∫–∏ –≤ –≤–∏–¥–µ —Ç–µ—Ñ—Ç–µ–ª–µ–π, –∑–∞–¥—É–º–∞–π—Ç–µ—Å—å –æ —Ç–æ–º —á—Ç–æ–±—ã –≤–∑—è—Ç—å –∑–æ–Ω—Ç–∏–∫! ‚òîÔ∏è')

        elif weather_data['weather'][0]['main'] == 'Clear':
            await message.answer(f'–ì–æ—Ä–æ–¥: {city} \n'
                                 f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}‚ÑÉ üå°\n'
                                 f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}‚ÑÉ \n'
                                 f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å üí®\n'
                                 f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} ‚òÄÔ∏è\n'
                                 f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n'
                                 f"\n"
                                 f'–°–∞–º–æ–µ –≤—Ä–µ–º—è –≤—ã–π—Ç–∏ –Ω–∞ –ø—Ä–æ–≥—É–ª–∫—É üßëüèª‚Äçü¶Ω')

        elif weather_data['weather'][0]['main'] == 'Atmosphere':
            await message.answer(f'–ì–æ—Ä–æ–¥: {city} \n'
                                 f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}‚ÑÉ üå°\n'
                                 f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}‚ÑÉ üå°\n'
                                 f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å üí®\n'
                                 f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} üå™\n'
                                 f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n'
                                 f"\n"
                                 f'–í–æ–∑–º–æ–∂–Ω–æ —Å—Ç–æ–∏—Ç –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞, –∫—Ç–æ –∑–Ω–∞–µ—Ç —á—Ç–æ —Ç–µ–±—è —Ç–∞–º –∂–¥–µ—Ç? üò∂‚Äçüå´Ô∏è')

        elif weather_data['weather'][0]['main'] == 'Snow':
            await message.answer(f'–ì–æ—Ä–æ–¥: {city} \n'
                                 f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}‚ÑÉ üå°\n'
                                 f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}‚ÑÉ üå°\n'
                                 f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å üí®\n'
                                 f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} ‚ùÑÔ∏è\n'
                                 f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n'
                                 f"\n"
                                 f'–ö–∞–∂–µ—Ç—Å—è –Ω–∞ —É–ª–∏—Ü–µ –∏–¥–µ—Ç —Å–Ω–µ–≥, –ø–æ—Ä–∞ –ø–æ–π—Ç–∏ –∏ —Å–ª–µ–ø–∏—Ç—å —Å–Ω–µ–≥–æ–≤–∏–∫–∞! ‚òÉÔ∏è')

        elif weather_data['weather'][0]['main'] == 'Rain':
            await message.answer(f'–ì–æ—Ä–æ–¥: {city} \n'
                                 f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}‚ÑÉ üå°\n'
                                 f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}‚ÑÉ üå°\n'
                                 f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å üí®\n'
                                 f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} üåß\n'
                                 f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n'
                                 f"\n"
                                 f'–ö–∞–∂–µ—Ç—Å—è –Ω–∞—Å —Å–∫–æ—Ä–æ –∑–∞—Ç–æ–ø–∏—Ç, –ø–æ–∫–∞ –Ω–µ –ø–æ–∑–¥–Ω–æ –∑–∞–ø–∞—Å–∞–π—Ç–µ—Å—å –ø—Ä–∏–ø–∞—Å–∞–º–∏ –∏ –ø–æ–∫—É–ø–∞–π—Ç–µ –ª–æ–¥–∫—É! ü§ø')

        elif weather_data['weather'][0]['main'] == 'Drizzle':
            await message.answer(f'–ì–æ—Ä–æ–¥: {city} \n'
                                 f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}‚ÑÉ üå°\n'
                                 f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}‚ÑÉ üå°\n'
                                 f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å üí®\n'
                                 f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} üå®\n'
                                 f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n'
                                 f"\n"
                                 f'–ü–æ–∫–∞ –Ω–µ –ø–æ–∑–¥–Ω–æ, —Å—Ç–æ–∏—Ç –∫—É–ø–∏—Ç—å –¥–æ–∂–¥–µ–≤–∏–∫! üéà')

        elif weather_data['weather'][0]['main'] == 'Thunderstorm':
            await message.answer(f'–ì–æ—Ä–æ–¥: {city} \n'
                                 f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}‚ÑÉ üå°\n'
                                 f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}‚ÑÉ üå°\n'
                                 f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å üí®\n'
                                 f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} üå®\n'
                                 f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n'
                                 f"\n"
                                 f'–ú–æ–∂–µ—Ç –Ω—É –µ–≥–æ —ç—Ç–∏ —à–æ–∫–æ–ª–∞–¥–∫–∏ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞, –ª—É—á—à–µ –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –¥–æ–º–∞ –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ —Å–µ—Ä–∏–∞–ª—ã! üçøüì∫')

        elif weather_data['weather'][0]['main'] not in weather_list:
            await message.answer(f'–ì–æ—Ä–æ–¥: {city} \n'
                                 f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {temperature}‚ÑÉ üå°\n'
                                 f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temperature_feels}‚ÑÉ üå°\n'
                                 f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å üí®\n'
                                 f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover} ‚òÄÔ∏è\n'
                                 f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% üíß\n')

    except KeyError:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
        await message.answer(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥: {city}')

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    await bot.delete_webhook(drop_pending_updates=True)  # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    await dp.start_polling(bot)  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å

if __name__ == '__main__':
    asyncio.run(main())  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é